{"categories":[],"posts":[{"content":" Docker是什麼 Docker中文翻译为\u0026rdquo;码头搬运工人\u0026rdquo;，是一个开源软件。 Docker容器与虚拟机类似，但二者在原理上不同。容器是OS-level virtualization，而虚拟机则是将硬件虚拟化，因此容器更被视为软件的一个标准化单元（个人理解就相当于一个小胶囊，里面裹着一个软件所需要的环境。这个小胶囊可以不依赖外部环境独立运行，从而避免产生一些奇奇怪怪的库问题。）\n國內Docker鏡像加速站 天朝自有国情在\n在国内使用官方提供的mirror会经常出现掉线等情况。\n这里列举了一些国内的docker镜像站：\nDocker国内官方镜像:https://registry.docker-cn.com\n网易:http://hub-mirror.c.163.com\n阿里云:https://3laho3y3.mirror.aliyuncs.com\nDaoCloud:http://f1361db2.m.daocloud.io\n腾讯云:https://mirror.ccs.tencentyun.com\n修改方式 打开你的terminal\n$ sudo nano /etc/default/docker  在最后一行加上\nDOCKER_OPTS=\u0026quot;--registry-mirror=站点地址\u0026quot;  回到terminal\n$ sudo systemctl daemon-reload $ sudo systemctl restart docker  Docker的一些坑 No Command Specified错误 解决链接:https://serverfault.com/questions/757210/no-command-specified-from-re-imported-docker-image-container\n在docker中export容器仅仅是将其文件系统给export出来，有很多信息都丢失了。因此如果要将已被冻结的image（原本是个container）给import回去，就必须要加一些东西来重构context。\n举个例子，假设我们要导入一个名为dump.tar的image文件。在用于构建dump.tar这个image的Dockerfile中有一句CMD [\u0026ldquo;/bin/bash\u0026rdquo;]，而这句话对于container正常运行起至关重要的作用，那就必须要用这种方式来导入这个image文件：\n$ sudo docker import \\ --change 'CMD [\u0026quot;bin/bash\u0026quot;]' \\ /path/to/dump.tar imagename:tagname  ","id":0,"section":"posts","summary":"Docker是什麼 Docker中文翻译为\u0026rdquo;码头搬运工人\u0026rdquo;，是一个开源软件。 Docker容器与虚拟机类似，但二者在原理","tags":["工具"],"title":"關於Docker一些奇奇怪怪的東西","uri":"https://hinwai.top/2020/08/docker/","year":"2020"},{"content":" 懶得上網找工具了，這裡是一些我備份在mega雲端硬碟上的link\nPWN IDA: https://mega.nz/file/DldDUAzQ#ZItMbE8UzDxLP-F_7HXYnfeyK4ENb35OLI_4mPqhWIQ\n","id":1,"section":"posts","summary":"懶得上網找工具了，這裡是一些我備份在mega雲端硬碟上的link PWN IDA: https://mega.nz/file/DldDUAzQ#ZItMbE8UzDxLP-F_7HXYnfeyK4ENb35OLI_4mPqhWIQ","tags":["工具"],"title":"一些常用工具","uri":"https://hinwai.top/2020/08/tools/","year":"2020"},{"content":" 可能会存在一些不严谨的地方，望各位大佬指正Orz😬。\nOSI七层模型是ISO提出的一个试图使世界范围内的计算机互联的框架。看起来好像有点晦涩，那就用李大爷约王奶奶出来吃饭做个例子吧。\n李大爷搁家里无聊，于是打算约隔壁家的王奶奶出来吃饭🤔。 應用層 Application Layer 李大爷想约饭，自然就得要把想表达的意思通过一定的句法和结构（协议）组织成一段话，大概长这样：\n#李爷爷的内心独白 { \u0026quot;主语\u0026quot;: \u0026quot;李大爷\u0026quot;, \u0026quot;谓语\u0026quot;: \u0026quot;约\u0026quot;, \u0026quot;宾语\u0026quot;: \u0026quot;王奶奶\u0026quot;, \u0026quot;目的\u0026quot;: { \u0026quot;目的1\u0026quot;: \u0026quot;吃饭\u0026quot;, \u0026quot;目的2\u0026quot;: \u0026quot;跳广场舞\u0026quot; } }  你在浏览器搜索某个东西，点下回车键之后搜索的东西会被打包成HTTP报文、发邮件的时候可能会通过SMTP协议、连接服务器通过SSH协议等，这些都是“想法”级别的东西。\n表現層 Presentation Layer 想法有了，那就得用一种大家都能懂语言（中文也好洋文也好，反正听得懂就行），把想法给表达出来。\n在计算机中，则是用ASCII,UTF-8等将HTTP报文进行编码压缩加密 并转换成机器看得懂的二进制码。\n这决定了李大爷讲哪种语言王奶奶才能听得懂 表达的时候是否话中有话\nascii和utf8相当于电脑用的单词本\n會議層 Session Layer 确定各种对话参数建立并维护一个会话（确认别人是否有权和你对话 有没有冒充身份和你对话 在哪里对话 对话会不会被人窃听） 认证方式有challenge-response，我个人理解类似于这段对话\n# 你真的是李大爷吗？ # -啊这...那肯定是啊！ # 我们小学班主任是谁？ # -ehhh.好吧我是冒牌货  傳輸層 Transport Layer 在包中加上了传输表头。表头中包含端口号，使用的，如TCP、UDP之类的传输控制协议信息。\n句子结构已经整理好了，语言已经选好了（用中文），王爷爷就该因地制宜地选择到底是用不可靠的飞鸽传书，可靠的电话机电报机通信，还是去王奶奶家摁门铃面对面来进行会话了。\n網路層 Network Layer 在包中加上了网络表头等信息，其中包含终点的IP地址等互联网（IP）协议的信息。\n如果王爷爷是打电话的话，那就相当于从电话本中查询王奶奶电话号码。\n資料鏈結层 Data Link Layer 负责网络寻址、错误侦测和改错。当表头和表尾被加至数据包时，就形成了数据帧（Data Frame），包含了MAC地址等信息。\n数据链表头（DLH）包含了物理地址和错误的侦测、更改方法。 链表尾（DLT）是指示数据包末端的字符串，比如以太网、Wi-Fi和GPRS（通用分组无线服务）等。\n老电话不能直接打通，中间要进行人工转接，MAC地址这里相当于下一个邮电交换局的电话，下一个邮电交换局又打给下一个，以此类推直到王奶奶的电话响铃。\n在现代通讯中就相当于无线基站的地址。\n物理層 Physical Layer 负责在网络中传送数据帧（data frame)\n管理电脑通信设备和网络媒体中的互通 包括针脚、电压、集线器、网卡、中继器等底层物理网络设备。\n李爷爷和王奶奶的通话中则相当于电话机、邮电交换局等用于传输帧的通话基础设施的实体。\n总结 至此，李爷爷便完成了一次约王奶奶出门的通信过程咯🙌 不过OSI参考模型并没有提供一个可以实现的方法，仅仅描述了一些概念，以及制定了一些用来协调进程间通信标准。它并不是一个标准，而是一个在制定标准时所使用的概念性框架。\n","id":2,"section":"posts","summary":"可能会存在一些不严谨的地方，望各位大佬指正Orz😬。 OSI七层模型是ISO提出的一个试图使世界范围内的计算机互联的框架。看起来好像有点晦涩，","tags":["基础知识"],"title":"OSI七层模型的一些个人理解","uri":"https://hinwai.top/2020/08/osi/","year":"2020"},{"content":" 說在前面 本文纯粹从技术角度出发，以学习nginx并进行相关实践为主要目的。\n請勿將本技術用於違法目的！用本文提到的技術進行違法犯罪而造成的不良後果或法律責任均與本文作者無關。 要準備的東西 PS：这只是我的配置：\n伺服器 搭载Ubuntu 18.04.05 LTS系统.\nv2ray\nnginx-1.14.0\nv2ray v2ray是一款代理软件.支持VMess,Shadowsocks等代理协议.关于更多v2ray的信息可以去官网了解.\n想偷懒的话可以直接下载别人写好的懒人脚本一键完成安装和配置.\n这里假设我们已经设置好了v2ray端口为10086,inbound为VMess协议,流量伪装方式为websocket,ws路径为/Abcde123/,关闭tls。\n这里可以关掉tls，因为在nginx转发中就已经提供了tls功能。\nSSL證書的獲取 首先上GoDaddy或者Namesilo买一个域名，这些网站上的域名一般都挺便宜的。\n我选择了将这些域名托管在Cloudflare上（要将域名提供商的NameServer改成Cloudflare的xx.ns.cloudflare.com）。\n然后更改DNS record，添加指向服务器IP的A记录等。\n这里假设域名为abc.top，下面将为其颁发证书\nssh连服务器，输入指令:\n$ curl https://get.acme.sh | bash $ acme.sh --issue -d abc.top --standalone ;此时证书已经颁发完毕并保存在了~/.acme.sh/abc.top/目录下 $ ... ;将证书复制保存到一个安全的地方就o啦  这里采用了\u0026ndash;standalone模式来脱机验证域名的ownership,当然你也可以用dns或者webroot模式来验证.说实话我用webroot方式出错了好多次2333333，当时啥也不会，还以为是证书的问题，然后折磨王地generate了证书又删掉又gen了好多回，结果被Let\u0026rsquo;s Encrypt（可以白嫖证书的良心CA）给限速了。\nPS:standalone验证的时候要记得把nginx关掉（让80端口开放）\n關於Nginx Nginx是一个免费、开源的异步框架网页服务器应用（u1s1 毛子开发的东西还挺管用，感兴趣的童鞋可以去了解一下Igor Sysoev这个人）。\nNginx可以用于反向代理(Reverse Proxy)，负载均衡(Load Balance)和HTTP缓存等目的。\n这里使用的主要是nginx的Reverse Proxy功能\n安裝方式： 大佬说过：效率至上，既然有包管理器了那干嘛还要用源码编译呢?\n这里我就用最简单粗暴的方法:apt 😌\n$ sudo apt-get install -y nginx  配置文件 根据官方文档中的说明，nginx的配置文件为nginx.conf\n我修改的配置文件路径为/etc/nginx/sites-enable/default\n因为这个文件最后都会被include到nginx.conf文件里头，所以可以直接修改这个default文件。\n下面是我的配置文件内容（和用Nginx配置HTTPS的配置文件内容大同小异）\nserver { listen 443 ssl; ssl on; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #指定多个TLS版本以增加兼容性 ssl_certificate /path/to/your.website.cer; #.cer文件是域名证书 ssl_certificate_key /path/to/your.website.key; #.key文件是域名私钥 #用acme.sh申请证书的时候不需要像网上说的那样还要再--install-cert一次 location /your_ws_path/ { proxy_pass http://127.0.0.1:10086/Abcde123/; #这里的ws路径可以理解成一个网站的uri proxy_redirect off; proxy_set_header Connection \u0026quot;upgrade\u0026quot;; proxy_set_header Upgrade $http_upgrade; proxy_set_header Host $http_host; proxy_http_version 1.1; #使得v2ray能将realip记录到access.log里 proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } }  然后直接启动nginx即可\n客户端 客户端配置连接的时候需要将服务器端口改成443，并且将ws路径改成nginx的location块配置的路径名称（这里是your_ws_path）。\n总结 用nginx通过模拟HTTPS连接的方式对v2ray进行websocket流量转发能较好地伪装流量，并且还能在大多数情况下绕过运营商QoS，因此是一个不错的选择噢😉。\n","id":3,"section":"posts","summary":"說在前面 本文纯粹从技术角度出发，以学习nginx并进行相关实践为主要目的。 請勿將本技術用於違法目的！用本文提到的技術進行違法犯罪而造成的不良","tags":null,"title":"实战nginx转发v2ray流量","uri":"https://hinwai.top/2020/08/v2ray/","year":"2020"},{"content":" 悄咪咪水一篇七夕节的文章\n今年你脫單了嗎 反正我是没有的555555（\n一早起床看了一下pyq，整个人🐸了。于是我决定关掉pyq直面这一卡车七彩狗粮甚至还给几条pyq点了个👍（做人连这点心态都没有怎么能行呢）。\n關於七夕節 史前时期（大概170万年前吧）的时候，人们就已经对星星产生了崇拜之情。渐渐地，有些人因此也就迷上了观星🔭，吃饱饭了就往天上看看（反正也没事干，吾等社畜甚慕之😩）。\n有一天他们发现在银河系两端有两颗特别的星星🌟，并且发现它们一年只见一次面，于是磕cp上了瘾的古人们不约而同地商量了一波，把这一天定成一个特殊的日子。（其实从天文学上来讲它们只能永远网络一线牵了。毕竟牛郎星在天鹰座，织女星在天琴座，这中间可隔着16光年呢😯）\n汉朝的时候，织女被神话并赋予以编织云雾的女神👸、妇女儿童守护神的形象。而到了宋代的时候，阴历七月初七祭祀活动渐渐地才开始流行起来。\n其他國家 日本的七夕节（平假:たなばた 罗马音:Tanabata）是国历的七月七号（日本其实也有阴历，只不过明治维新之后就废除了官方的使用，然后这些节日就转换成了国历）。即便是这样，有些地方七夕节过国历，有些地方还是过回农历（比如仙台七夕祭）。\nTanabata的庆祝仪式一般在七月份进行，有时候是八月份。如果那天下雨了，人们就会认为这些雨是织女由于无法见到牛郎而哭泣的眼泪。\n当今，Tanabata在日本成了一个表达心愿的节日活动（不只是爱情那么简单了，或许还有恭喜发财？233333）\n所以在今天，很多日本人会将自己的心愿写到卡片上，然后把卡片挂上许愿竹（下图），如果竹子不够挂了他们还可能会把卡片挂在树上。\n後記 在宇宙中，总能遇到一颗星星，闪烁的是一眼便已经确认过的光芒，亦望天下有情人终成眷属👫。\n","id":4,"section":"posts","summary":"悄咪咪水一篇七夕节的文章 今年你脫單了嗎 反正我是没有的555555（ 一早起床看了一下pyq，整个人🐸了。于是我决定关掉pyq直面这一卡车七彩狗","tags":["吹水台"],"title":"七夕节","uri":"https://hinwai.top/2020/08/qixi/","year":"2020"},{"content":" 大佬们:你用Markdown写blog像极了某kun打🏀\n關於我 我叫Hinux.😃\n某华南不用军训带学的学生,非计算机专业,喜欢唱跳rap .\n平时比较喜欢玩玩乐器🎸唱下歌仔什么的🎤\nLinux(Ubuntu)厨\n对于我来说Windows一般用来打游戏\n平時會寫些什麼呢？ 聊一些漫无边际的东西，还有偶尔share一些技术感想。偶尔也会记录一下心情啊或者有些挺有意思的所见所闻叭😉。\n關於我的小窩 本窝基于Hugo引擎搭建，使用的是xiaoheiAh大佬的Pure模板，遵循CC BY 4.0协议。\n算是在一次心血来潮中搭的吧（主要是想建个站玩玩哈哈哈）,本人技术还不够炉火纯青,有很多功能还没完善（大佬轻喷😣Orz）.\n","id":5,"section":"posts","summary":"大佬们:你用Markdown写blog像极了某kun打🏀 關於我 我叫Hinux.😃 某华南不用军训带学的学生,非计算机专业,喜欢唱跳rap . 平时","tags":["about-me"],"title":"My First Blog","uri":"https://hinwai.top/2020/08/my-first-blog/","year":"2020"}],"tags":[{"title":"about-me","uri":"https://hinwai.top/tags/about-me/"},{"title":"吹水台","uri":"https://hinwai.top/tags/%E5%90%B9%E6%B0%B4%E5%8F%B0/"},{"title":"基础知识","uri":"https://hinwai.top/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"title":"工具","uri":"https://hinwai.top/tags/%E5%B7%A5%E5%85%B7/"}]}